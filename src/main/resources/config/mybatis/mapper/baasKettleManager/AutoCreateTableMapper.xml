<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zsbatech.baasKettleManager.dao.AutoCreateTableMapper" >
  <resultMap id="BaseResultMap" type="com.zsbatech.baasKettleManager.model.AutoCreateTable" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="step_id" property="stepId" jdbcType="INTEGER" />
    <result column="is_exist" property="isExist" jdbcType="TINYINT" />
    <result column="sql_string" property="sqlString" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_id, step_id, is_exist, sql_string, creater, created, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auto_create_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from auto_create_table
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from auto_create_table
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTableExample" >
    delete from auto_create_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTable" >
    <selectKey resultType="int" keyProperty="id" order="AFTER">
      select LAST_INSERT_ID()
    </selectKey>
    insert into auto_create_table (id, job_id, step_id, 
      is_exist, sql_string, creater, 
      created, updated)
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{stepId,jdbcType=INTEGER}, 
      #{isExist,jdbcType=TINYINT}, #{sqlString,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTable" >
    insert into auto_create_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="stepId != null" >
        step_id,
      </if>
      <if test="isExist != null" >
        is_exist,
      </if>
      <if test="sqlString != null" >
        sql_string,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null" >
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="isExist != null" >
        #{isExist,jdbcType=TINYINT},
      </if>
      <if test="sqlString != null" >
        #{sqlString,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTableExample" resultType="java.lang.Integer" >
    select count(*) from auto_create_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update auto_create_table
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.stepId != null" >
        step_id = #{record.stepId,jdbcType=INTEGER},
      </if>
      <if test="record.isExist != null" >
        is_exist = #{record.isExist,jdbcType=TINYINT},
      </if>
      <if test="record.sqlString != null" >
        sql_string = #{record.sqlString,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update auto_create_table
    set id = #{record.id,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      step_id = #{record.stepId,jdbcType=INTEGER},
      is_exist = #{record.isExist,jdbcType=TINYINT},
      sql_string = #{record.sqlString,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTable" >
    update auto_create_table
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null" >
        step_id = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="isExist != null" >
        is_exist = #{isExist,jdbcType=TINYINT},
      </if>
      <if test="sqlString != null" >
        sql_string = #{sqlString,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsbatech.baasKettleManager.model.AutoCreateTable" >
    update auto_create_table
    set job_id = #{jobId,jdbcType=INTEGER},
      step_id = #{stepId,jdbcType=INTEGER},
      is_exist = #{isExist,jdbcType=TINYINT},
      sql_string = #{sqlString,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>