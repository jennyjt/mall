<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zsbatech.baasKettleManager.dao.SrcDbConnectionMapper" >
  <resultMap id="BaseResultMap" type="com.zsbatech.baasKettleManager.model.SrcDbConnection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="step_id" property="stepId" jdbcType="INTEGER" />
    <result column="link_name" property="linkName" jdbcType="VARCHAR" />
    <result column="db_host" property="dbHost" jdbcType="VARCHAR" />
    <result column="db_port" property="dbPort" jdbcType="VARCHAR" />
    <result column="db_name" property="dbName" jdbcType="VARCHAR" />
    <result column="db_user" property="dbUser" jdbcType="VARCHAR" />
    <result column="db_password" property="dbPassword" jdbcType="VARCHAR" />
    <result column="src_table" property="srcTable" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="src_column" property="srcColumn" jdbcType="VARCHAR" />
    <result column="src_sql" property="srcSql" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_id, step_id, link_name, db_host, db_port, db_name, db_user, db_password, 
    src_table, created, updated, src_column, src_sql
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from src_db_connection
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getConnectionList" parameterType="java.util.Map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from src_db_connection
    <where>
      <if test="jobId != null">
        and job_id = #{jobId}
      </if>
      <if test="stepId != null">
        and step_id = #{stepId}
      </if>
    </where>
    order by id desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from src_db_connection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zsbatech.baasKettleManager.model.SrcDbConnection" >
    <selectKey resultType="int" keyProperty="id" order="AFTER">
      select LAST_INSERT_ID()
    </selectKey>
    insert into src_db_connection (id, job_id, step_id, 
      link_name, db_host, db_port, 
      db_name, db_user, db_password, 
      src_table, created, updated, 
      src_column, src_sql)
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{stepId,jdbcType=INTEGER}, 
      #{linkName,jdbcType=VARCHAR}, #{dbHost,jdbcType=VARCHAR}, #{dbPort,jdbcType=VARCHAR}, 
      #{dbName,jdbcType=VARCHAR}, #{dbUser,jdbcType=VARCHAR}, #{dbPassword,jdbcType=VARCHAR}, 
      #{srcTable,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{srcColumn,jdbcType=VARCHAR}, #{srcSql,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSrcDbConnList" parameterType="com.zsbatech.baasKettleManager.model.SrcDbConnection" >
    insert into src_db_connection (id, job_id, step_id,
    link_name, db_host, db_port,
    db_name, db_user, db_password,
    src_table, created, updated,
    src_column, src_sql)
    values
    <foreach collection="list" item="item" index= "index" separator =",">
      (#{item.id,jdbcType=INTEGER}, #{item.jobId,jdbcType=INTEGER}, #{item.stepId,jdbcType=INTEGER},
      #{item.linkName,jdbcType=VARCHAR}, #{item.dbHost,jdbcType=VARCHAR}, #{item.dbPort,jdbcType=VARCHAR},
      #{item.dbName,jdbcType=VARCHAR}, #{item.dbUser,jdbcType=VARCHAR}, #{item.dbPassword,jdbcType=VARCHAR},
      #{item.srcTable,jdbcType=VARCHAR}, #{item.created,jdbcType=TIMESTAMP}, #{item.updated,jdbcType=TIMESTAMP},
      #{item.srcColumn,jdbcType=VARCHAR}, #{item.srcSql,jdbcType=VARCHAR})
    </foreach>

  </insert>

  <insert id="insertSelective" parameterType="com.zsbatech.baasKettleManager.model.SrcDbConnection" >
    insert into src_db_connection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="stepId != null" >
        step_id,
      </if>
      <if test="linkName != null" >
        link_name,
      </if>
      <if test="dbHost != null" >
        db_host,
      </if>
      <if test="dbPort != null" >
        db_port,
      </if>
      <if test="dbName != null" >
        db_name,
      </if>
      <if test="dbUser != null" >
        db_user,
      </if>
      <if test="dbPassword != null" >
        db_password,
      </if>
      <if test="srcTable != null" >
        src_table,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="srcColumn != null" >
        src_column,
      </if>
      <if test="srcSql != null" >
        src_sql,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null" >
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="linkName != null" >
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="dbHost != null" >
        #{dbHost,jdbcType=VARCHAR},
      </if>
      <if test="dbPort != null" >
        #{dbPort,jdbcType=VARCHAR},
      </if>
      <if test="dbName != null" >
        #{dbName,jdbcType=VARCHAR},
      </if>
      <if test="dbUser != null" >
        #{dbUser,jdbcType=VARCHAR},
      </if>
      <if test="dbPassword != null" >
        #{dbPassword,jdbcType=VARCHAR},
      </if>
      <if test="srcTable != null" >
        #{srcTable,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="srcColumn != null" >
        #{srcColumn,jdbcType=VARCHAR},
      </if>
      <if test="srcSql != null" >
        #{srcSql,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsbatech.baasKettleManager.model.SrcDbConnection" >
    update src_db_connection
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null" >
        step_id = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="linkName != null" >
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="dbHost != null" >
        db_host = #{dbHost,jdbcType=VARCHAR},
      </if>
      <if test="dbPort != null" >
        db_port = #{dbPort,jdbcType=VARCHAR},
      </if>
      <if test="dbName != null" >
        db_name = #{dbName,jdbcType=VARCHAR},
      </if>
      <if test="dbUser != null" >
        db_user = #{dbUser,jdbcType=VARCHAR},
      </if>
      <if test="dbPassword != null" >
        db_password = #{dbPassword,jdbcType=VARCHAR},
      </if>
      <if test="srcTable != null" >
        src_table = #{srcTable,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="srcColumn != null" >
        src_column = #{srcColumn,jdbcType=VARCHAR},
      </if>
      <if test="srcSql != null" >
        src_sql = #{srcSql,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsbatech.baasKettleManager.model.SrcDbConnection" >
    update src_db_connection
    set job_id = #{jobId,jdbcType=INTEGER},
      step_id = #{stepId,jdbcType=INTEGER},
      link_name = #{linkName,jdbcType=VARCHAR},
      db_host = #{dbHost,jdbcType=VARCHAR},
      db_port = #{dbPort,jdbcType=VARCHAR},
      db_name = #{dbName,jdbcType=VARCHAR},
      db_user = #{dbUser,jdbcType=VARCHAR},
      db_password = #{dbPassword,jdbcType=VARCHAR},
      src_table = #{srcTable,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      src_column = #{srcColumn,jdbcType=VARCHAR},
      src_sql = #{srcSql,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>