<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zsbatech.baasKettleManager.dao.JobMetaVOMapper" >
  <resultMap id="BaseResultMap" type="com.zsbatech.baasKettleManager.vo.JobMetaVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="createtime" property="createTime" jdbcType="VARCHAR" />
    <result column="updatetime" property="updateTime" jdbcType="VARCHAR" />
    <result column="trans_meta_id" property="transMetaId" jdbcType="INTEGER" />
    <result column="execute_status" property="executeStatus" jdbcType="TINYINT" />
    <result column="job_type" jdbcType="VARCHAR" property="jobType" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_name, file_name, createtime, updatetime,trans_meta_id,execute_status,job_type
  </sql>

    <insert id="insert" parameterType="com.zsbatech.baasKettleManager.vo.JobMetaVO">
    insert into job_meta (id, job_name, file_name,
      createtime, updatetime, trans_meta_id,
      execute_status, job_type)
    values (#{id,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR},
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{transMetaId,jdbcType=INTEGER},
      #{executeStatus,jdbcType=TINYINT}, #{jobType,jdbcType=VARCHAR})
  </insert>

    <select id="selectByJobName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from job_meta
        where job_name = #{jobName,jdbcType=VARCHAR}
        limit 1
    </select>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        from job_meta
        <where>
            id in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item,jdbcType=INTEGER}
            </foreach>
        </where>
    </select>
</mapper>
